# -*- coding: utf-8 -*-
"""Fetal Movements and Stillbirth Trends.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1210iHtJdM3L17Ku5hIitZGKrvsaxZAOA
"""

import pandas as pd

# Load the Excel file to see the sheet names and get a preview of the data
xl = pd.ExcelFile('/content/datashare3m.xls')
sheet_names = xl.sheet_names

# Show the sheet names and preview the first sheet
sheet_names

# Load the data from the first sheet into a DataFrame
df = xl.parse('Sheet1')

# Show the first few rows of the DataFrame to get an overview of the data
df.head()

"""# Time Series Analysis"""

import matplotlib.pyplot as plt
import seaborn as sns

# Set the style for the plots
sns.set(style="whitegrid")

# Time Series Plot for Fetal Deaths and Live Births over time
plt.figure(figsize=(15, 6))
sns.lineplot(x='year', y='tot_FD_3m', data=df, label='Total Fetal Deaths (3m)', marker='o')
sns.lineplot(x='year', y='tot_LBs_3m', data=df, label='Total Live Births (3m)', marker='s')

plt.title('Time Series Analysis: Fetal Deaths and Live Births Over Time')
plt.xlabel('Year')
plt.ylabel('Count')
plt.legend()
plt.show()

"""The line plot shows the trends of total fetal deaths and total live births over time, aggregated by year.

The trend for total live births seems relatively stable, with some fluctuation.
The trend for total fetal deaths also appears to be somewhat stable, although there is less data for this variable, which makes it harder to discern a clear pattern.

# Correlation Analysis
"""

# Calculate the correlation matrix
correlation_matrix = df.corr()

# Plot the heatmap for correlation
plt.figure(figsize=(15, 10))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix')
plt.show()

# Extract and display the correlations with 'tot_FD_3m'
correlation_with_fetal_deaths = correlation_matrix['tot_FD_3m'].sort_values(ascending=False)
correlation_with_fetal_deaths

"""The heatmap illustrates the correlation coefficients between the variables in the dataset.

Here are some insights related to the correlation of fetal deaths (tot_FD_3m):

Total Live Births (tot_LBs_3m): Highly positively correlated (0.98), which is expected as both are counts related to birth outcomes.

Percent of First Live Births (pc_firstLB3m): Positively correlated (0.37).
Percent of Cesarean Sections (pc_CS3m): Positively correlated (0.37).

Mean Age of Mothers (mean_age3m): Positively correlated (0.22).

Percent of Poverty (pcPov): Positively correlated (0.21).

Percent of Mothers who Smoke (pc_smoke3m): Negatively correlated (-0.66), which is intriguing and warrants further investigation.

These correlations provide some insights into factors that might be associated with fetal deaths.

# Regression Analysis
"""

# Impute missing values with the mean of each column
df_imputed = df.fillna(df.mean())

# Check if any missing values remain
missing_values = df_imputed.isnull().sum().sum()
missing_values

# Split the imputed data into training and testing sets
X_train_imputed, X_test_imputed, y_train_imputed, y_test_imputed = train_test_split(df_imputed[features], df_imputed[target], test_size=0.2, random_state=42)

# Fit the model to the imputed training data
lr_model.fit(X_train_imputed, y_train_imputed)

# Make predictions on the imputed test set
y_pred_imputed = lr_model.predict(X_test_imputed)

# Evaluate the model on imputed data
mse_imputed = mean_squared_error(y_test_imputed, y_pred_imputed)
r2_imputed = r2_score(y_test_imputed, y_pred_imputed)

mse_imputed, r2_imputed

"""The linear regression model was successfully trained on the imputed data. Here are the evaluation metrics for the model:

Mean Squared Error (MSE): 284.84
R-squared: 0.955
The R-squared value is quite high, indicating that the model explains about 95.5% of the variance in the test data. This suggests that the model performs well in predicting fetal deaths based on the selected features.

# Seasonal trends
"""

# Grouping the data by the 3-month period to find seasonal trends
seasonal_data = df.groupby('time3m').agg({'tot_FD_3m': 'mean', 'tot_LBs_3m': 'mean'}).reset_index()

# Plotting the seasonal trends for Fetal Deaths and Live Births
plt.figure(figsize=(12, 6))
sns.lineplot(x='time3m', y='tot_FD_3m', data=seasonal_data, label='Average Fetal Deaths (3m)', marker='o')
sns.lineplot(x='time3m', y='tot_LBs_3m', data=seasonal_data, label='Average Live Births (3m)', marker='s')

plt.title('Seasonal Trends: Fetal Deaths and Live Births by 3-Month Periods')
plt.xlabel('3-Month Period')
plt.ylabel('Average Count')
plt.legend()
plt.show()

"""The line plot shows the average counts of fetal deaths and live births for each 3-month period, presumably representing quarters of the year.

Observations:

The average count of live births shows some fluctuations across the 3-month periods, which could indicate a seasonal pattern.

The average count of fetal deaths also fluctuates but not as noticeably as live births.

However, the data does not show a clear and strong seasonal trend for either fetal deaths or live births. The fluctuations may be due to other factors that are not accounted for in this dataset.
"""